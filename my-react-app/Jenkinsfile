pipeline {
    agent any

    environment {
        VERCEL_TOKEN = credentials('vercel-token')
        VERCEL_ORG = 'potterpurpps-projects'
        DISCORD_WEBHOOK_URL = 'https://discord.com/api/webhooks/1301119066265747517/2YJCuNJJO-JlYJ9fUQK7_c_xTUj-Jasv97RiO7Fyb7Y9qPtEtsxNolQKAE4QKaNEszj1'
        //
    }
    stages {
        stage('Checkout') {
            steps {
                echo "Hello World!"
                git branch: 'main', url: 'https://github.com/Potterpurpp/potteraomfree.git' 
            }
        }
        stage('Install Dependencies') {
            steps {
                dir('my-react-app') {
                    sh 'rm -rf node_modules package-lock.json'
                    sh 'npm install'
                }
            }
        }
        stage('Build') {
            steps {
                dir('my-react-app') {
                    sh 'npm run build'
                }
            }
        }
        stage('Deploy to Vercel') {
            steps {
                dir('my-react-app') {
                    // Use npx to run the Vercel CLI
                    sh 'npx vercel --token $VERCEL_TOKEN --scope $VERCEL_ORG --prod --confirm'
                }
            }
        }
         stage('Notify Discord') {
            steps {
                script {
                    def message = "Deployment to Vercel successful: ${env.BUILD_URL}"
                    sh """
                    curl -H "Content-Type: application/json" -d '{
                        "content": "${message}"
                    }' ${DISCORD_WEBHOOK_URL}
                    """
                }
            }
        }
    }

    post {
        always {
            cleanWs(cleanWhenNotBuilt: false,
                    deleteDirs: true,
                    disableDeferredWipeout: true,
                    notFailBuild: true,
                    patterns: [[pattern: '.gitignore', type: 'INCLUDE'],
                               [pattern: '.propsfile', type: 'EXCLUDE']])
        }
        success {
            echo 'Pipeline succeeded!'
        }
        failure {
            echo 'Pipeline failed.'
        }
    }
}
