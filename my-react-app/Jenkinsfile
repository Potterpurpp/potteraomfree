pipeline {
    agent any

    environment {
        VERCEL_TOKEN = credentials('vercel-token')
        VERCEL_ORG = 'potterpurpps-projects'
        DISCORD_WEBHOOK_URL = 'https://discord.com/api/webhooks/1301119066265747517/2YJCuNJJO-JlYJ9fUQK7_c_xTUj-Jasv97RiO7Fyb7Y9qPtEtsxNolQKAE4QKaNEszj1'
        TEAMS_WEBHOOK_URL = 'https://bluebikgroupoutlookcom.webhook.office.com/webhookb2/145186be-7da8-49ca-ae1f-04113cb2f86b@c6f661d6-c0e6-4a9b-beee-5dda4af7788b/IncomingWebhook/b2c70ed0cf10420d9443e8055e9ef101/b90aed23-9e60-4dd0-8400-4a9574103f9a/V2IcFDTMgzoWlVX6CHTFhp9QyRSAf_FDo4t7s6EkCra1E1'
    }
    stages {
        stage('Checkout') {
            steps {
                echo "Hello World!"
                git branch: 'main', url: 'https://github.com/Potterpurpp/potteraomfree.git' 
            }
        }
        stage('Install Dependencies') {
            steps {
                dir('my-react-app') {
                    sh 'rm -rf node_modules package-lock.json'
                    sh 'npm install'
                }
            }
        }
        stage('Build') {
            steps {
                dir('my-react-app') {
                    sh 'npm run build'
                }
            }
        }
        stage('Deploy to Vercel') {
            steps {
                dir('my-react-app') {
                    // Use npx to run the Vercel CLI
                    sh 'npx vercel --token $VERCEL_TOKEN --scope $VERCEL_ORG --prod --confirm'
                }
            }
        }
         stage('Notify Discord') {
            steps {
                script {
                    def message = "Deployment to Vercel successful: ${env.BUILD_URL}"
                    sh """
                    curl -H "Content-Type: application/json" -d '{
                        "content": "${message}"
                    }' ${DISCORD_WEBHOOK_URL}
                    """
                }
            }
        }
    }

    post {
        always {
            // Notify Build Start
            office365ConnectorSend(
                webhookUrl: TEAMS_WEBHOOK_URL,
                color: '#00ADEF', // Blue for build start
                message: """
                    <div style="font-size:16px;">
                        <img src="https://i.scdn.co/image/ae10a882537eab0c76b4dbaeab8fd5233f370fc4" alt="Build Start Icon" style="width:30 px; height:30px; vertical-align:middle;"/> 
                        <strong style="color:#00ADEF;">üöÄ Build Started</strong><br/>
                        <span style="font-size:14px;">Pipeline build #${env.BUILD_NUMBER} has started.</span>
                    </div>
                """,
                status: "Started"
            )
        }

        aborted {
            // Notify Aborted
            office365ConnectorSend(
                webhookUrl: TEAMS_WEBHOOK_URL,
                color: '#FFA500', // Orange for aborted
                message: """
                    <div style="font-size:16px;">
                        <img src="https://example.com/aborted-icon.png" alt="Aborted Icon" style="width:24px; height:24px; vertical-align:middle;"/> 
                        <strong style="color:#FFA500;">‚õî Build Aborted</strong><br/>
                        <span style="font-size:14px;">Pipeline build #${env.BUILD_NUMBER} was aborted.</span>
                    </div>
                """,
                status: "Aborted"
            )
        }

        failure {
            // Notify Failure
            office365ConnectorSend(
                webhookUrl: TEAMS_WEBHOOK_URL,
                color: '#FF0000', // Red for failure
                message: """
                    <div style="font-size:16px;">
                        <img src="https://example.com/failure-icon.png" alt="Failure Icon" style="width:24px; height:24px; vertical-align:middle;"/> 
                        <strong style="color:#FF0000;">‚ùå Build Failed</strong><br/>
                        <span style="font-size:14px;">Pipeline build #${env.BUILD_NUMBER} failed.</span>
                    </div>
                """,
                status: "Failure"
            )
        }

        notBuilt {
            // Notify Not Built
            office365ConnectorSend(
                webhookUrl: TEAMS_WEBHOOK_URL,
                color: '#808080', // Gray for not built
                message: """
                    <div style="font-size:16px;">
                        <img src="https://example.com/not-built-icon.png" alt="Not Built Icon" style="width:24px; height:24px; vertical-align:middle;"/> 
                        <strong style="color:#808080;">‚ö†Ô∏è Build Not Built</strong><br/>
                        <span style="font-size:14px;">Pipeline build #${env.BUILD_NUMBER} was not built.</span>
                    </div>
                """,
                status: "Not Built"
            )
        }

        success {
            // Notify Success
            office365ConnectorSend(
                webhookUrl: TEAMS_WEBHOOK_URL,
                color: '#00FF00', // Green for success
                message: """
                    <div style="font-size:16px;">
                        <img src="https://example.com/success-icon.png" alt="Success Icon" style="width:24px; height:24px; vertical-align:middle;"/> 
                        <strong style="color:#00FF00;">‚úÖ Build Succeeded</strong><br/>
                        <span style="font-size:14px;">Pipeline build #${env.BUILD_NUMBER} succeeded.</span>
                    </div>
                """,
                status: "Success"
            )
        }

        unstable {
            // Notify Unstable
            office365ConnectorSend(
                webhookUrl: TEAMS_WEBHOOK_URL,
                color: '#FFFF00', // Yellow for unstable
                message: """
                    <div style="font-size:16px;">
                        <img src="https://example.com/unstable-icon.png" alt="Unstable Icon" style="width:24px; height:24px; vertical-align:middle;"/> 
                        <strong style="color:#FFFF00;">‚ö†Ô∏è Build Unstable</strong><br/>
                        <span style="font-size:14px;">Pipeline build #${env.BUILD_NUMBER} is unstable.</span>
                    </div>
                """,
                status: "Unstable"
            )
        }

        cleanup {
            cleanWs(
                cleanWhenNotBuilt: false,
                deleteDirs: true,
                disableDeferredWipeout: true,
                notFailBuild: true,
                patterns: [
                    [pattern: '.gitignore', type: 'INCLUDE'],
                    [pattern: '.propsfile', type: 'EXCLUDE']
                ]
            )
        }
    }
} 
