pipeline {
    agent any

    environment {
        VERCEL_TOKEN = credentials('vercel-token')
        VERCEL_ORG = 'potterpurpps-projects'
    }
    node(slaveLabel) {
    checkoutCode()
    prepareVars()
    discordSend description: "Jenkins Pipeline Build ${appName}", footer: "Start Build", link: "$BUILD_URL", result: currentBuild.currentResult, title: JOB_NAME, webhookURL: "webhook url discord"// Webhook url discord ที่บรรทัดนี้

    switch(envName) {
      case ["dev", "sit", "uat"]:
        runUnitTest()
        runOWASP()
        runSonarQube()
        buildAndPushDockerImage()
        deployApp()
        // runPerfTest()
        break
      case "tag":
        buildAndPushDockerImage()
        break
      case "prod":
        checkoutCode(checkout_tag: true)
        deployApp()
        break
    }
  }

    stages {
        stage('Checkout') {
            steps {
                echo "Hello World!"
                git branch: 'main', url: 'https://github.com/Potterpurpp/potteraomfree.git'
            }
        }
        stage('Install Dependencies') {
            steps {
                dir('my-react-app') {
                    sh 'rm -rf node_modules package-lock.json'
                    sh 'npm install'
                }
            }
        }
        stage('Build') {
            steps {
                dir('my-react-app') {
                    sh 'npm run build'
                }
            }
        }
        stage('Deploy to Vercel') {
            steps {
                dir('my-react-app') {
                    // Use npx to run the Vercel CLI
                    sh 'npx vercel --token $VERCEL_TOKEN --scope $VERCEL_ORG --prod --confirm'
                }
            }
        }
    }

    post {
        always {
            cleanWs(cleanWhenNotBuilt: false,
                    deleteDirs: true,
                    disableDeferredWipeout: true,
                    notFailBuild: true,
                    patterns: [[pattern: '.gitignore', type: 'INCLUDE'],
                               [pattern: '.propsfile', type: 'EXCLUDE']])
        }
        success {
            echo 'Pipeline succeeded!'
        }
        failure {
            echo 'Pipeline failed.'
        }
    }
}
